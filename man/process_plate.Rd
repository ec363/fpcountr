% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_plate.R
\name{process_plate}
\alias{process_plate}
\title{Process timecourse plate reader data (normalise, correct and calibrate)}
\usage{
process_plate(
  data_csv,
  blank_well = "A1",
  timecourse = TRUE,
  od_name = "OD",
  flu_channels = c("green1green2"),
  flu_channels_rename = NULL,
  af_model = "spline",
  neg_well = "A2",
  do_quench_correction = FALSE,
  od_type,
  do_calibrate = FALSE,
  instr,
  flu_slugs = c(),
  flu_gains = c(),
  flu_labels = c(),
  od_coeffs_csv,
  fluor_coeffs_csv,
  outfolder = "."
)
}
\arguments{
\item{data_csv}{path to a CSV file containing parsed plate reader data}

\item{blank_well}{the well coordinates of one or more media blanks. Defaults
to "A1".}

\item{timecourse}{logical. Is the data timecourse/kinetic data and does it
include a variable called 'time'?}

\item{od_name}{the column name for the optical density data. Defaults to
"OD". If no OD measurements were taken, use \code{NULL}.}

\item{flu_channels}{the column names for the fluorescence data. Defaults to
"green1green2".}

\item{flu_channels_rename}{if specified, what to change the flu_channels
column names to, before computing normalisations and calibrations. Can be
useful if the channel_name in the calibration file is named differently
from the columns in the data file. Needs to be same length as flu_channels,
if not all require changing, specify them anyway to allow positional
replacement (first element in flu_channels_rename replaces first in
flu_channels, etc.). Defaults to NULL.}

\item{af_model}{model used to fit negative control autofluorescence. For now
these include "polynomial", "inverse_poly", "exponential", "spline" and
"loess". If set to NULL, no model is used, and fluorescence is normalised
akin to OD: by subtracting the value for the blanks. Defaults to "spline".}

\item{neg_well}{the well coordinates of a non-fluorescent control. Defaults
to "A2".}

\item{do_quench_correction}{logical. Should function correct for anticipated
quenching of fluorescence, depending on the cell density?}

\item{od_type}{Which OD-type was used? Required for quench correction.
"OD600" or "OD700".}

\item{do_calibrate}{logical. Should function convert OD and fluorescence data
to calibrated units? Defaults to FALSE.}

\item{instr}{character string to represent instrument. If do_calibrate =
TRUE, used for filtering \code{od_coeffs_csv} and \code{fluor_coeffs_csv} files for
conversion factors of the relevant instrument.}

\item{flu_slugs}{character array representing fluorescent proteins (format =
FPbase slug). If do_calibrate = TRUE, used for filtering \code{fluor_coeffs_csv}
for conversion factors of the relevant FP.}

\item{flu_gains}{numeric array representing gains of each fluorescent
channel. If do_calibrate = TRUE, used for filtering \code{fluor_coeffs_csv} for
conversion factors of the relevant gain.}

\item{flu_labels}{If do_calibrate = TRUE, the column names to be given to
each calibration. May be identical to flu_slug or flu_channel, but
recommended is to make it obvious which FP is being calibrated, e.g.
"mCherry", as channel names may be non-specifically named e.g. "red1red1".
Needs to be same length as flu_slugs and flu_gains.}

\item{od_coeffs_csv}{if do_calibrate = TRUE, path of the CSV file containing
conversion factors for optical density}

\item{fluor_coeffs_csv}{if do_calibrate = TRUE, path of the CSV file
containing predicted conversion factors for the fluorescent channels}

\item{outfolder}{path to folder where output files should be saved. Defaults
to current working directory.}
}
\value{
a data.frame with columns for raw plate reader data, normalised data
and, if do_calibrate = TRUE, calibrated OD and FP data
}
\description{
Normalise and calibrate plate reader measurements to obtain molecular units
from the raw data. Originally based on \code{flopr::process_plate} but with many
changes. Takes as input timecourse plate reader data containing optical
density measurements and fluorescence measurements as CSV file. First, the
function normalises optical density readings and fluorescence readings to an
autofluorescence model based on the specified negative wells (see 2020
Fedorec et al ACS SynBio for details). The identity of the blank wells need
to be specified in \code{blank_wells}, the reading to be used for optical density
in \code{od_name}, and the fluorescence channels in \code{flu_channels}. The
autofluorescence model can be set with \code{af_model} on the \code{neg_well} wells,
alternatively, fluorescence can be normalised to blank wells by setting
\code{af_model} to \code{NULL}. Second, if \code{do_quench_correction} is TRUE, it
compensates for cellular quenching of fluorescence measurements according to
the cell density. This requires the specification of \code{od_type} as "OD600" or
"OD700". Third, if \code{do_calibrate} is TRUE, normalised values are calibrated,
where conversion factors are provided as \code{od_coeffs_csv} for OD and
\code{fluor_coeffs_csv} for fluorescence, and each calibration is specified by the
\code{flu_slugs} to represent the FP used, \code{flu_gains} to provide the gain used,
and \code{flu_labels} to specify how the relevant plots should be labelled, (e.g.
\code{flu_slugs = c("mcherry", "mtagbfp2")}, \code{flu_gains = c(60,80)}, \code{flu_labels = c("RFP, BFP")}).
}
\examples{
\dontrun{
  processed_data <- process_plate(
    data_csv = "mcherry_parsed.csv",
    blank_well = c("A11"),
    od_name = "OD600", flu_channels = c("red1"), flu_channels_rename = c("red1red1"),
    af_model = NULL,
    do_quench_correction = TRUE, od_type = "OD700",
    do_calibrate = TRUE, instr = "spark1",
    flu_slugs = c("mcherry"), flu_gains = c(80), flu_labels = c("mcherry"),
    od_coeffs_csv = "od_coeffs.csv", fluor_coeffs_csv = "flu_coeffs.csv",
    outfolder = file.path("data_processed")
  )
}
}
